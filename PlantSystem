#include <Arduino.h>
#include "DHT.h"
#include "switchKaKu.h"
#include <WiFiMulti.h>
#include <InfluxDbClient.h>
#include <InfluxDbCloud.h>
#include <math.h>
 
#define DHTPIN 32
#define DHTTYPE DHT11
#define TRANSMITTERID1 123456
#define rfPin 25
 
DHT dht(DHTPIN, DHTTYPE);
 
const int ldrPin = 39;
const int ledPin = 2;
int lightInitial;
int lightValue;
 
int moistSensPin = 36;
int moistValue = 0;
int pumpPin = 33;
 
const char *WIFI_SSID = "eduroam";
const char *WIFI_PASSWORD = "tienesh123";
const char *INFLUXDB_URL = "https://influx.mvrautomatisering.nl";
const char *INFLUXDB_TOKEN = "";
const char *INFLUXDB_ORG = "han";
const char *INFLUXDB_BUCKET = "Tijn_Bucket";
const char *TZ_INFO = "CET-1CEST,M3.5.0,M10.5.0/3";
 
WiFiMulti wifiMulti;
InfluxDBClient client(INFLUXDB_URL, INFLUXDB_ORG, INFLUXDB_BUCKET, INFLUXDB_TOKEN, InfluxDbCloud2CACert);
Point deviceStatus("devices");
 
#ifdef __cplusplus
extern "C"
{
#endif
    uint8_t temprature_sens_read();
#ifdef __cplusplus
}
#endif
 
uint8_t temprature_sens_read();
 
void setupLightSensor()
{
    Serial.begin(9600);
    pinMode(ldrPin, INPUT);
    pinMode(ledPin, OUTPUT);
    lightInitial = analogRead(ldrPin);
}
 
void loopLightSensor()
{
    lightValue = analogRead(ldrPin);
    Serial.println(lightValue);
    if (lightInitial - lightValue >= 200)
    {
        digitalWrite(ledPin, HIGH); // turn on light
    }
    else
    {
        digitalWrite(ledPin, LOW); // turn off light
    }
}
 
void setupMoistureSensor()
{
    Serial.begin(9600);
    pinMode(pumpPin, OUTPUT);
}
 
void loopMoistureSensor()
{
    moistValue = analogRead(moistSensPin);
    Serial.print("Moisture Value = ");
    Serial.println(moistValue);
    delay(1000);
 
    Serial.println("Pump is now on");
    digitalWrite(pumpPin, HIGH);
    delay(500);
 
    Serial.println("Pump is now off");
    digitalWrite(pumpPin, LOW);
    delay(500);
}
 
void setupDHTSensor()
{
    Serial.begin(9600);
    Serial.println(F("DHT11 test!"));
    dht.begin();
}
 
void loopDHTSensor()
{
    delay(1000);
    float h = dht.readHumidity();
    float t = dht.readTemperature();
 
    if (isnan(h) || isnan(t))
    {
        Serial.println(F("Failed to read from DHT sensor!"));
        return;
    }
 
    Serial.print(F("Humidity: "));
    Serial.print(h);
    Serial.print(F("%  Temperature: "));
    Serial.print(t);
    Serial.println(F("Â°C "));
}
 
void setupKlikaanKlikuit()
{
    // Setup code for KlikaanKlikuit if needed
}
 
void loopKlikaanKlikuit()
{
    switchKaku(rfPin, TRANSMITTERID1, 1, 1, true, 3);
    delay(3000);
    switchKaku(rfPin, TRANSMITTERID1, 1, 1, false, 3);
    delay(3000);
}
 
void setup()
{
    setupLightSensor();
    setupMoistureSensor();
    setupDHTSensor();
    setupKlikaanKlikuit();
 
    Serial.begin(9600);
    WiFi.mode(WIFI_STA);
    wifiMulti.addAP(WIFI_SSID, WIFI_PASSWORD);
    Serial.print("Connecting to wifi...");
 
    while (wifiMulti.run() != WL_CONNECTED)
    {
        Serial.print(".");
        delay(100);
    }
 
    Serial.println("");
    Serial.println("WiFi connected.");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());
    client.setWriteOptions(WriteOptions().batchSize(1).flushInterval(0));
    deviceStatus.addTag("device", "DEVICE_NAME");
    deviceStatus.addTag("location", "DEVICE_LOCATION");
    deviceStatus.addTag("SSID", WiFi.SSID());
    timeSync(TZ_INFO, "pool.ntp.org", "time.nis.gov");
 
    if (client.validateConnection())
    {
        Serial.print("Connected to InfluxDB: ");
        Serial.println(client.getServerUrl());
    }
    else
    {
        Serial.print("InfluxDB connection failed: ");
        Serial.println(client.getLastErrorMessage());
    }
}
 
void loop()
{
    loopLightSensor();
    loopMoistureSensor();
    loopDHTSensor();
    loopKlikaanKlikuit();
 
    deviceStatus.clearFields();
    int t_f = temprature_sens_read();
    int t_c = (t_f - 32) * 5 / 9;
    deviceStatus.addField("internal_temp", t_c);
    int wifiStrength = WiFi.RSSI();
    deviceStatus.addField("wifi_strength", wifiStrength);
    unsigned long uptime = millis() / 1000;
    deviceStatus.addField("uptime", uptime);
 
    if (wifiMulti.run() != WL_CONNECTED)
    {
        Serial.println("Wifi connection lost");
    }
 
    if (!client.writePoint(deviceStatus))
    {
        Serial.print("InfluxDB write failed: ");
        Serial.println(client.getLastErrorMessage());
    }
 
    Serial.println("Wait 10s");
    delay(10000);
}